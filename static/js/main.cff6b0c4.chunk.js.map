{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","reverseHandler","setState","alphabeticSorter","ALPABET","lengthSorter","LENGTH","resetHandler","this","newGoods","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,eAAiB,WACf,EAAKC,UAAS,SAACL,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBARzB,EAYEK,iBAAmB,WACjB,EAAKD,SAAS,CAAEH,SAAUL,EAASU,WAbvC,EAgBEC,aAAe,WACb,EAAKH,SAAS,CAAEH,SAAUL,EAASY,UAjBvC,EAoBEC,aAAe,WACb,EAAKL,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KAvBlB,4CA2BE,WACE,MAGIU,KAAKX,MAFPC,EADF,EACEA,WACAC,EAFF,EAEEA,SAGIU,EA/DH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAERa,EAAY,YAAOD,GAEvB,OAAQX,GACN,KAAKL,EAASU,QACZO,EAAeA,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,cAAcD,MAC3D,MAEF,KAAKpB,EAASY,OACZK,EAAeA,EAAaC,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEG,OAASF,EAAEE,UAM5D,OAAIlB,EACKa,EAAaM,UAGfN,EAyCYO,CAAkBvB,EACjC,CAAEI,WAAUD,eAEd,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBpB,IAAaL,EAASU,SAAW,YAC9DiB,QAASb,KAAKL,iBAHhB,iCAQA,wBACEiB,KAAK,SACLD,UAAS,4BAAuBpB,IAAaL,EAASY,QAAU,YAChEe,QAASb,KAAKH,aAHhB,4BAQA,wBACEe,KAAK,SACLD,UAAS,6BAAwBrB,GAAc,YAC/CuB,QAASb,KAAKP,eAHhB,qBAQEF,GAAYD,EAEV,wBACEsB,KAAK,SACLD,UAAU,4BACVE,QAASb,KAAKD,aAHhB,mBAQA,MAGN,6BACE,6BACGE,EAASa,KAAI,SAAAC,GACZ,OACE,8BACE,qBACE,UAAQ,OADV,SAIGA,GAFIA,mBAnFzB,GAAyBC,IAAMC,WCxD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cff6b0c4.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods = visibleGoods.sort((a, b) => a.localeCompare(b));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods = visibleGoods.sort((a, b) => a.length - b.length);\n      break;\n\n    default:\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  reverseHandler = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  alphabeticSorter = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  lengthSorter = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  resetHandler = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  render() {\n    const {\n      isReversed,\n      sortType,\n    } = this.state;\n\n    const newGoods = getReorderedGoods(goodsFromServer,\n      { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== SortType.ALPABET && 'is-light'}`}\n            onClick={this.alphabeticSorter}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n            onClick={this.lengthSorter}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed && 'is-light'}`}\n            onClick={this.reverseHandler}\n          >\n            Reverse\n          </button>\n\n          {(sortType || isReversed)\n            ? (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.resetHandler}\n              >\n                Reset\n              </button>\n            )\n            : ''}\n        </div>\n\n        <ul>\n          <ul>\n            {newGoods.map(good => {\n              return (\n                <div>\n                  <div\n                    data-cy=\"Good\"\n                    key={good}\n                  >\n                    {good}\n                  </div>\n                </div>\n              );\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}